version: "3.2"

services:
  # UKWA Heritrix
  heritrix-worker:
    image: ukwa/heritrix-worker:2.4.9
    hostname: "heritrix3-worker-{{.Task.Slot}}"
    ports:
      - 8443:8443
    environment:
      - "JAVA_OPTS=-Xmx4g"
      - "MAX_TOE_THREADS=400"
      - "CLAMD_HOST=clamd"
      - "CLAMD_ENABLED=true"
      - "KAFKA_BOOTSTRAP_SERVERS=kafka:9092"
      - "KAFKA_TOCRAWL_TOPIC=fc.candidates"
      - "KAFKA_CANDIDATES_TOPIC=fc.candidates"
      - "KAFKA_CANDIDATES_LOG_ENABLED=false"
      - "KAFKA_CANDIDATES_IN_SCOPE_ONLY=true"
      - "KAFKA_CRAWLED_TOPIC=fc.crawled"
      - "KAFKA_SEEK_TO_BEGINNING=true"
      - "KAFKA_MAX_POLL_RECORDS=1000"
      - "KAFKA_NUM_MESSAGE_THREADS=16"
      - "RECORD_DECIDING_RULE=true"
      - "WEBRENDER_ENDPOINT=http://webrender:8010/render"
      - "WEBRENDER_ENABLED=true"
      - "CDXSERVER_ENDPOINT=http://192.168.45.21:9090/fc"
      - "JOB_NAME=frequent"
      - "HERITRIX_USER=admin"
      - "HERITRIX_PASSWORD=bl_uk"
      - "LAUNCH_AUTOMATICALLY=true"
      - "CHECKPOINT_FORGET_ALL_BUT_LATEST=false"
      # Crawl scope main configuration - gets updated as seeds are launched, or can up updated externally:
      - "SURTS_SOURCE_FILE=/shared/frequent-surts.txt" # Use shared surts file.
      - "SURTS_EXCLUDE_SOURCE_FILE=/shared/frequent-excluded-surts.txt" # Use shared exclusion file.
      - "SCOPE_FILE_RELOAD_INTERVAL=60"
      - "WARC_PREFIX=BL-NPLD"
      - "WEBRENDER_WARC_PREFIX=BL-NPLD-WEBRENDER"
    volumes:
      - "/mnt/gluster/fcbeta/heritrix/output:/heritrix/output"
      - "/mnt/gluster/fcbeta/heritrix/state:/heritrix/state"
      - "/mnt/gluster/fcbeta/surts:/shared" # Shared configuration - surts file held here.
    deploy:
      replicas: 1
    depends_on:
      - kafka
      - clamd
      - webrender

  # Clamd virus scanning Service
  clamd:
    image: ukwa/clamd
    deploy:
      replicas: 4


  # Kafka used as main mechanism for CrawlURI routing and logging
  # Needs a Zookeeper too
  # ----
  zookeeper:
    image: zookeeper:3.4
    ports:
      - 2181:2181
    volumes:
      - "/mnt/gluster/fcbeta/zookeeper/data:/data"
      - "/mnt/gluster/fcbeta/zookeeper/datalog:/datalog"

  kafka:
    image: wurstmeister/kafka:2.12-2.1.0
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
      - target: 7071
        published: 7071
        protocol: tcp
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.45.19
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://192.168.45.19:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      LOG_RETENTION_HOURS: -1
      LOG_RETENTION_BYTES: -1
      NUM_PARTITIONS: 32
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_CREATE_TOPICS: "fc.to-crawl:32:1,fc.crawled:32:1,fc.candidates:32:1"
      # persistent files are in consistent locations, each server supplies a /kafka folder.
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_DIRS: /kafka/kafka-logs/kafka-logs-broker-1
      # Integrate with Prometheus - note that this interferes with the create-topics script so may need to be disabled when first creating the topics:
      KAFKA_JMX_OPTS: "-javaagent:/prom-jmx/jmx_prometheus_javaagent-0.10.jar=7071:/prom-jmx/prom-jmx-agent-config-kafka.yml"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "/mnt/gluster/fcbeta/kafka:/kafka"
      - ./prom-jmx/:/prom-jmx
    depends_on:
      - zookeeper
    #deploy:
    #  mode: global


  # Kafka UI
  kafka-ui:
    image: ukwa/docker-trifecta
    ports:
      - "9000:9000"
    environment:
      - "ZK_HOST=zookeeper:2181"
    depends_on:
      - zookeeper
      - kafka

  # tinycdxserver
  #cdxserver:
  #  image: ukwa/tinycdxserver
  #  command: "java -jar outbackcdx.jar -v -d /cdx-data -p 8080 -b 0.0.0.0"
  #  ports:
  #    - "9090:8080"
  #  volumes:
  #    - "/mnt/gluster/fcbeta/cdxserver:/cdx-data"


  # ----------------------------------------------
  # WARC Proxy
  # ----------------------------------------------

  # The WARChiving proxy itself
  warcprox:
    image: ukwa/warcprox:2.3.1
    command: "warcprox -b 0.0.0.0 -d /output/warcs --base32 --gzip --rollover-idle-time 600 --dedup-db-file /dev/null --stats-db-file /dev/null --quiet --plugin warcprox-plugins.listeners.UpdateOutbackCDX --plugin warcprox-plugins.listeners.KafkaCaptureFeed"
    environment:
      - "KAFKA_BOOTSTRAP_SERVERS=192.168.45.19:9094"
      - "KAFKA_CRAWLED_TOPIC=fc.crawled"
      - "KAFKA_ACKS=1"
      - "CDXSERVER_ENDPOINT=http://192.168.45.21:9090/fc"
    volumes:
      - "/mnt/gluster/fcbeta/heritrix/wren:/output/warcs"
    deploy:
      replicas: 1


  # ----------------------------------------------
  # Web Render Farm
  # ----------------------------------------------

  # Web page rendering service:
  webrender:
    image: ukwa/webrender-api:1.0.5
    ports:
      - 8010:8010
    environment:
      - "WARCPROX=warcprox:8000"
      - "LC_ALL=en_US.utf8"
      - "WEB_RENDER_TMP=/tmp/webrender"
      - "DOCKER_NETWORK=fc_default"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # For launching containerised renderers
      - /tmp/webrender:/tmp/webrender
    deploy:
      replicas: 1
    depends_on:
      - warcprox


  # ----------------------------------------------
  # Monitoring & Control
  # ----------------------------------------------

  hapy-dash:
    image: ukwa/ukwa-manage
    ports:
      - 9118:8000
    environment:
      - "CRAWL_ID=frequent (test)"
      - "HERITRIX_USERNAME=admin"
      - "HERITRIX_PASSWORD=bl_uk"
      - "CRAWL_JOBS_FILE=/crawl-jobs.json"
      - "WEBHDFS_PREFIX=http://warc-server:8000/by-filename/"
      - "CDX_SERVER=http://192.168.45.21:9090/fc"
      - "KAFKA_BOOTSTRAP_SERVERS=192.168.45.19:9094"
      - "KAFKA_CRAWLED_TOPIC=fc.crawled"
      - "KAFKA_SEEK_TO_BEGINNING=False"
    volumes:
      - /root/github/ukwa-ingest-services/deploy/crawl-engine/test/crawl-jobs.json:/crawl-jobs.json
    depends_on:
      - heritrix-worker
      - kafka
      - cdxserver
      - warc-server

  prometheus:
    image: prom/prometheus
    ports:
      - 9191:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - "/mnt/gluster/fcbeta/prometheus-data:/prometheus"
    user: root
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.external-url=http://crawler02.bl.uk:9191/'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'


  # ----------------------------------------------
  # QA Access
  # ----------------------------------------------
  warc-server:
    image: ukwa/warc-server
    ports:
      - 8001:8000
    environment:
      - "WARC_PATHS=/heritrix/output,/heritrix/wren,/previous/output,/previous/wren"
    volumes:
      - "/mnt/gluster/fcbeta/heritrix/output:/heritrix/output"
      - "/mnt/gluster/fcbeta/heritrix/wren:/heritrix/wren"
      - "/data/test/heritrix/output:/previous/output"
      - "/data/test/heritrix/wren:/previous/wren"

  # OpenWayback for QA
  openwayback:
    image: ukwa/waybacks
    ports:
      - "8080:8080"
      - "8090:8090"
    environment:
      - "UKWA_OWB_VERSION=qa"
      - "WAYBACK_URL_PORT=8080"
      - "WAYBACK_PROXY_PORT=8090"
      - "CDX_WHITELIST="
      - "WAYBACK_EXCLUDE_FILE=/usr/local/tomcat/webapps/ROOT/WEB-INF/classes/exclude.txt"
      - "WAYBACK_EMBARGO=0"
      - "WAYBACK_HTTPFS_PREFIX=http://warc-server:8000/by-filename/"
      - "CDX_INDEX_SERVER=http://192.168.45.21:9090/fc"
      - "WAYBACK_URL_PREFIX=http://crawler02.bl.uk:8080"
      - "WAYBACK_URL_HOST=crawler02.bl.uk"

  # ----------------------------------------------
  # Test sites
  # ----------------------------------------------

  # Local version of the Archival Acid Test: http://acid.matkelly.com
  acid-test:
    image: ukwa/archival-acid-test
    ports:
      - "180:80"  
    networks:
      default:
        aliases:
          - acid.matkelly.com

  # Local version of the UKWA test site: http://crawl-test-site.webarchive.org.uk
  crawl-test:
    image: ukwa/crawl-test-site
    ports:
      - "280:80"
    networks:
      default:
        aliases:
          - crawl-test-site.webarchive.org.uk

  # ----------------------------------------------
  # Providing system and container level metrics:
  # ----------------------------------------------

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /data/docker/:/var/lib/docker:ro
    ports:
      - 9393:8080


networks:
  # Allow attachment of transient containers, external monitoring:
  default:
    driver: overlay
    attachable: true

