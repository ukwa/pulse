version: "3.2"

services:

  # ----------------------------------------------
  # Kafka: used for URI routing and logging
  # ----------------------------------------------
  # Needs a Zookeeper too
  # ----
  zookeeper:
    image: zookeeper:3.4
    ports:
      - 2181:2181
    volumes:
      - ${STORAGE_PATH}/zookeeper/data:/data
      - ${STORAGE_PATH}/zookeeper/datalog:/datalog

  #
  # Kafka Broker Setup:
  #
  kafka-1:
    image: wurstmeister/kafka:2.12-2.1.0
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    depends_on:
      - zookeeper
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: PLAINTEXT://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 10
      KAFKA_LOG_RETENTION_HOURS: -1
      KAFKA_LOG_RETENTION_BYTES: -1
      KAFKA_NUM_PARTITIONS: 32
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      LOG4J_LOGGER_KAFKA: WARN
      # For monitoring via Prometheus:
      KAFKA_JMX_OPTS: "-javaagent:/prom-jmx/jmx_prometheus_javaagent-0.10.jar=7071:/prom-jmx/prom-jmx-agent-config-kafka.yml"
      # persistent files are in consistent locations, each server supplies a /kafka folder.
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_DIRS: /kafka/kafka-logs/kafka-logs-broker-1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${STORAGE_PATH}/kafka/kafka-logs-broker-1:/kafka/kafka-logs/kafka-logs-broker-1
      - ${STORAGE_PATH}/prom-jmx/:/prom-jmx
    deploy:
      replicas: 1
      placement:
        constraints: [node.hostname == crawler04.bl.uk]

  # Second Kafka instance
  kafka-2:
    image: wurstmeister/kafka:2.12-2.1.0
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    depends_on:
      - zookeeper
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: PLAINTEXT://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 10
      KAFKA_LOG_RETENTION_HOURS: -1
      KAFKA_LOG_RETENTION_BYTES: -1
      KAFKA_NUM_PARTITIONS: 32
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      LOG4J_LOGGER_KAFKA: WARN
      # For monitoring:
      KAFKA_JMX_OPTS: "-javaagent:/prom-jmx/jmx_prometheus_javaagent-0.10.jar=7071:/prom-jmx/prom-jmx-agent-config-kafka.yml"
      # persistent files are in consistent locations, each server supplies a /kafka folder.
      KAFKA_BROKER_ID: 2
      KAFKA_LOG_DIRS: /kafka/kafka-logs/kafka-logs-broker-2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${STORAGE_PATH}/kafka/kafka-logs-broker-2:/kafka/kafka-logs/kafka-logs-broker-2
      - ${STORAGE_PATH}/prom-jmx/:/prom-jmx
    deploy:
      replicas: 1
      placement:
        constraints: [node.hostname == crawler01.bl.uk]

  # Kafka UI
  ui:
    image: ukwa/docker-trifecta
    ports:
      - "9000:9000"
    environment:
      - "ZK_HOST=zookeeper:2181"
    depends_on:
      - zookeeper
      - kafka-1
      - kafka-2

networks:
  # Allow attachment of transient containers, external monitoring:
  default:
    driver: overlay
    attachable: true

